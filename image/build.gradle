import io.gitlab.arturbosch.detekt.Detekt

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'io.gitlab.arturbosch.detekt' version "1.21.0"
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation 'com.jakewharton.timber:timber:5.0.1'

    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.21.0"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.9'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation "org.mockito:mockito-core:4.8.1"
}

def configFile = files("$rootDir/config/detekt/detekt.yml")

apply plugin: 'io.gitlab.arturbosch.detekt'

tasks.register("customDetekt", Detekt) {
    description = "Custom DETEKT build for all modules"
    parallel = true
    buildUponDefaultConfig = false
    setSource(files("src/main/kotlin", "src/main/java"))
    config.setFrom(configFile)
    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = false
    }
}